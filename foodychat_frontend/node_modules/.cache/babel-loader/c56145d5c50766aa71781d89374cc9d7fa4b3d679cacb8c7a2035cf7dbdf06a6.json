{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import{useNavigate}from'react-router-dom';import NavBar from'./NavBar';import'./css/change-password.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function ChangePassword(){const navigate=useNavigate();const[currentPassword,setCurrentPassword]=useState('');const[newPassword,setNewPassword]=useState('');const[confirmPassword,setConfirmPassword]=useState('');const[message,setMessage]=useState('');const handleSubmit=async e=>{e.preventDefault();if(newPassword!==confirmPassword){setMessage('새 비밀번호가 일치하지 않습니다.');return;}try{const response=await axios.post('http://localhost:8080/users/changePassword',new URLSearchParams({currentPassword:currentPassword,newPassword:newPassword}),{headers:{'Content-Type':'application/x-www-form-urlencoded'},withCredentials:true});if(response.status===200){setMessage('비밀번호가 성공적으로 변경되었습니다.');setTimeout(()=>navigate('/myPage'),1500);}}catch(err){console.error(err);setMessage('비밀번호 변경에 실패했습니다.');}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsx(\"div\",{className:\"change-password-wrapper\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"change-password-form\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uBE44\\uBC00\\uBC88\\uD638 \\uBCC0\\uACBD\"}),message&&/*#__PURE__*/_jsx(\"p\",{className:\"message\",children:message}),/*#__PURE__*/_jsxs(\"label\",{children:[\"\\uD604\\uC7AC \\uBE44\\uBC00\\uBC88\\uD638\",/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:currentPassword,onChange:e=>setCurrentPassword(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"\\uC0C8 \\uBE44\\uBC00\\uBC88\\uD638\",/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:newPassword,onChange:e=>setNewPassword(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"\\uC0C8 \\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value),required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"change-button\",children:\"\\uBCC0\\uACBD\\uD558\\uAE30\"})]})})]});}","map":{"version":3,"names":["React","useState","axios","useNavigate","NavBar","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ChangePassword","navigate","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","message","setMessage","handleSubmit","e","preventDefault","response","post","URLSearchParams","headers","withCredentials","status","setTimeout","err","console","error","children","className","onSubmit","type","value","onChange","target","required"],"sources":["D:/workspace/FoodyChat/foodychat_frontend/src/components/ChangePassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport NavBar from './NavBar';\r\nimport './css/change-password.css';\r\n\r\nexport default function ChangePassword() {\r\n    const navigate = useNavigate();\r\n    const [currentPassword, setCurrentPassword] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [message, setMessage] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (newPassword !== confirmPassword) {\r\n        setMessage('새 비밀번호가 일치하지 않습니다.');\r\n        return;\r\n        }\r\n\r\n        try {\r\n        const response = await axios.post('http://localhost:8080/users/changePassword', \r\n            new URLSearchParams({\r\n                currentPassword: currentPassword,\r\n                newPassword: newPassword,\r\n            }),\r\n            {\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                withCredentials: true,\r\n            }\r\n        );\r\n\r\n        if (response.status === 200) {\r\n            setMessage('비밀번호가 성공적으로 변경되었습니다.');\r\n            setTimeout(() => navigate('/myPage'), 1500);\r\n        }\r\n        } catch (err) {\r\n            console.error(err);\r\n            setMessage('비밀번호 변경에 실패했습니다.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <NavBar />\r\n        <div className=\"change-password-wrapper\">\r\n            <form onSubmit={handleSubmit} className=\"change-password-form\">\r\n            <h2>비밀번호 변경</h2>\r\n            {message && <p className=\"message\">{message}</p>}\r\n\r\n            <label>\r\n                현재 비밀번호\r\n                <input\r\n                type=\"password\"\r\n                value={currentPassword}\r\n                onChange={(e) => setCurrentPassword(e.target.value)}\r\n                required\r\n                />\r\n            </label>\r\n\r\n            <label>\r\n                새 비밀번호\r\n                <input\r\n                type=\"password\"\r\n                value={newPassword}\r\n                onChange={(e) => setNewPassword(e.target.value)}\r\n                required\r\n                />\r\n            </label>\r\n\r\n            <label>\r\n                새 비밀번호 확인\r\n                <input\r\n                type=\"password\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                required\r\n                />\r\n            </label>\r\n\r\n            <button type=\"submit\" className=\"change-button\">변경하기</button>\r\n            </form>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}