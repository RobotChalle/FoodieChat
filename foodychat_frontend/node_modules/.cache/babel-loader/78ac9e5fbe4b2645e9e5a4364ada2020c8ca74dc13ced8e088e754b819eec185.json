{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import NavBar from'./NavBar';import{toast}from'react-toastify';import'./css/meal-recommend.css';import'./css/main.css';import{useParams}from'react-router-dom';import KakaoMap from'./KakaoMap';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const BASE_URL=process.env.REACT_APP_BASE_URL;const FAST_API_URL=process.env.REACT_APP_FAST_API_URL;export default function MealRecommendation(){const{foodName:paramFoodName}=useParams();const[foodName,setFoodName]=useState(paramFoodName||'');const[foodNameTranslations,setFoodNameTranslations]=useState({});const[location,setLocation]=useState('');const[recommendedStore,setRecommendedStore]=useState([]);const[summary,setSummary]=useState('');const[loading,setLoading]=useState(false);// ✅ 번역 정보 가져오기\nuseEffect(()=>{axios.get(`${BASE_URL}/analyze/foods/translations`).then(res=>{setFoodNameTranslations(res.data);if(paramFoodName&&res.data[paramFoodName]){setFoodName(paramFoodName);}}).catch(err=>{console.error('음식 번역 데이터 불러오기 실패:',err);});},[]);const translatedFood=foodNameTranslations[foodName];const handleRecommend=async()=>{if(!foodName.trim()){toast.error('음식을 선택해주세요!');return;}if(!location.trim()){toast.error('위치를 입력해주세요!(예: 수원역)');return;}try{setLoading(true);console.log(\"foodName:\",foodName);console.log(\"translatedFood:\",translatedFood);console.log(\"translations keys:\",Object.keys(foodNameTranslations));const payload=new URLSearchParams({foodName,location,foodName_ko:translatedFood||''// ❗ undefined 방지\n});const response=await axios.post(`${BASE_URL}/analyze/store`,payload,{headers:{'Content-Type':'application/x-www-form-urlencoded'},withCredentials:true});if(response.status===200){toast.success('추천 완료!');}const storeList=response.data.slice(0,5);setRecommendedStore(storeList);console.error('StoreList:',storeList);// 2. FastAPI로 Gemini 요약 요청\nconst aiResponse=await axios.post(`${FAST_API_URL}/cafe-recommend`,{food:foodName,location:location,stores:storeList});setSummary(aiResponse.data.summary);}catch(error){console.error('추천 실패:',error);toast.error('추천 요청 중 오류가 발생했습니다.');}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"recommend-form-container\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"recommend-title\",children:\"\\uD83D\\uDCCD \\uC2DD\\uB2F9 \\uCD94\\uCC9C\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"recommend-form-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-group-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\uC74C\\uC2DD \\uC120\\uD0DD\"}),/*#__PURE__*/_jsxs(\"select\",{value:foodName,onChange:e=>setFoodName(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"-- \\uC74C\\uC2DD \\uC120\\uD0DD --\"}),Object.keys(foodNameTranslations).map(key=>/*#__PURE__*/_jsxs(\"option\",{value:key,children:[foodNameTranslations[key],\" (\",key,\")\"]},key))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\uC704\\uCE58\"}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"\\uC608: \\uC218\\uC6D0\\uC5ED\",value:location,onChange:e=>setLocation(e.target.value),onKeyDown:e=>{if(e.key==='Enter'){e.preventDefault();handleRecommend();}}})]}),/*#__PURE__*/_jsx(\"div\",{className:\"input-item button-wrap\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handleRecommend,disabled:loading,children:loading?'추천중...':'추천 받기'})})]}),translatedFood&&/*#__PURE__*/_jsxs(\"div\",{className:\"translated-food\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uC120\\uD0DD\\uD55C \\uC74C\\uC2DD:\"}),\" \",translatedFood]}),summary&&/*#__PURE__*/_jsxs(\"div\",{className:\"ai-summary-box\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83E\\uDD16 AI \\uC694\\uC57D \\uCD94\\uCC9C\"}),/*#__PURE__*/_jsx(\"p\",{children:summary})]}),recommendedStore.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(KakaoMap,{stores:recommendedStore}),\"   \",/*#__PURE__*/_jsxs(\"div\",{className:\"result-section\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"result-title\",children:\"\\uD83D\\uDD16 \\uCD94\\uCC9C \\uC2DD\\uB2F9 \\uBAA9\\uB85D\"}),recommendedStore.map((store,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"result-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\uC2DD\\uB2F9\\uBA85\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",readOnly:true,value:store.name}),/*#__PURE__*/_jsx(\"label\",{children:\"\\uB9C1\\uD06C\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",readOnly:true,value:store.url,onClick:()=>window.open(store.url,'_blank'),style:{cursor:'pointer'}})]},index))]})]}),!loading&&recommendedStore.length===0&&/*#__PURE__*/_jsx(\"p\",{className:\"no-result\",children:\"\\uCD94\\uCC9C\\uB41C \\uC2DD\\uB2F9\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4. \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694.\"})]})]})]});}","map":{"version":3,"names":["React","useState","useEffect","axios","NavBar","toast","useParams","KakaoMap","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","BASE_URL","process","env","REACT_APP_BASE_URL","FAST_API_URL","REACT_APP_FAST_API_URL","MealRecommendation","foodName","paramFoodName","setFoodName","foodNameTranslations","setFoodNameTranslations","location","setLocation","recommendedStore","setRecommendedStore","summary","setSummary","loading","setLoading","get","then","res","data","catch","err","console","error","translatedFood","handleRecommend","trim","log","Object","keys","payload","URLSearchParams","foodName_ko","response","post","headers","withCredentials","status","success","storeList","slice","aiResponse","food","stores","children","className","value","onChange","e","target","map","key","placeholder","onKeyDown","preventDefault","onClick","disabled","length","store","index","type","readOnly","name","url","window","open","style","cursor"],"sources":["D:/workspace/FoodyChat/foodychat_frontend/src/components/CafeRecommend.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport NavBar from './NavBar';\r\nimport { toast } from 'react-toastify';\r\nimport './css/meal-recommend.css';\r\nimport './css/main.css';\r\nimport { useParams } from 'react-router-dom';\r\nimport KakaoMap from './KakaoMap';\r\n\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\r\nconst FAST_API_URL = process.env.REACT_APP_FAST_API_URL;\r\nexport default function MealRecommendation() {\r\n  const { foodName: paramFoodName } = useParams();\r\n  const [foodName, setFoodName] = useState(paramFoodName || '');\r\n  const [foodNameTranslations, setFoodNameTranslations] = useState({});\r\n  const [location, setLocation] = useState('');\r\n  const [recommendedStore, setRecommendedStore] = useState([]);\r\n  const [summary, setSummary] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // ✅ 번역 정보 가져오기\r\n  useEffect(() => {\r\n    axios.get(`${BASE_URL}/analyze/foods/translations`)\r\n      .then(res => {\r\n        setFoodNameTranslations(res.data);\r\n\r\n        if (paramFoodName && res.data[paramFoodName]) {\r\n          setFoodName(paramFoodName);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.error('음식 번역 데이터 불러오기 실패:', err);\r\n      });\r\n  }, []);\r\n\r\n  const translatedFood = foodNameTranslations[foodName];\r\n\r\n  const handleRecommend = async () => {\r\n    if (!foodName.trim()) {\r\n      toast.error('음식을 선택해주세요!');\r\n      return;\r\n    }\r\n\r\n    if (!location.trim()) {\r\n      toast.error('위치를 입력해주세요!(예: 수원역)');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      console.log(\"foodName:\", foodName);\r\n      console.log(\"translatedFood:\", translatedFood);\r\n      console.log(\"translations keys:\", Object.keys(foodNameTranslations));\r\n      const payload = new URLSearchParams({\r\n        foodName,\r\n        location,\r\n        foodName_ko: translatedFood || '',  // ❗ undefined 방지\r\n      });\r\n\r\n      const response = await axios.post(`${BASE_URL}/analyze/store`, payload, {\r\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n        withCredentials: true,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        toast.success('추천 완료!');\r\n      }\r\n\r\n      const storeList = response.data.slice(0, 5);\r\n      setRecommendedStore(storeList);\r\n      console.error('StoreList:',storeList);\r\n\r\n      // 2. FastAPI로 Gemini 요약 요청\r\n      const aiResponse = await axios.post(`${FAST_API_URL}/cafe-recommend`, {\r\n        food: foodName,\r\n        location: location,\r\n        stores: storeList\r\n      });\r\n\r\n      setSummary(aiResponse.data.summary);\r\n    } catch (error) {\r\n      console.error('추천 실패:', error);\r\n      toast.error('추천 요청 중 오류가 발생했습니다.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <div className=\"recommend-form-container\">\r\n        <h2 className=\"recommend-title\">📍 식당 추천</h2>\r\n\r\n        <div className=\"recommend-form-card\">\r\n          <div className=\"input-group-row\">\r\n            <div className=\"input-item\">\r\n              <label>음식 선택</label>\r\n              <select value={foodName} onChange={(e) => setFoodName(e.target.value)}>\r\n                <option value=\"\">-- 음식 선택 --</option>\r\n                {Object.keys(foodNameTranslations).map((key) => (\r\n                  <option key={key} value={key}>\r\n                    {foodNameTranslations[key]} ({key})\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"input-item\">\r\n              <label>위치</label>\r\n              <input\r\n                placeholder=\"예: 수원역\"\r\n                value={location}\r\n                onChange={(e) => setLocation(e.target.value)}\r\n                onKeyDown={(e) => {\r\n                  if (e.key === 'Enter') {\r\n                    e.preventDefault();\r\n                    handleRecommend();\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"input-item button-wrap\">\r\n              <button onClick={handleRecommend} disabled={loading}>\r\n                {loading ? '추천중...' : '추천 받기'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {translatedFood && (\r\n            <div className=\"translated-food\">\r\n              <strong>선택한 음식:</strong> {translatedFood}\r\n            </div>\r\n          )}\r\n\r\n          {/* ✅ AI 요약 결과 */}\r\n          {summary && (\r\n            <div className=\"ai-summary-box\">\r\n              <h3>🤖 AI 요약 추천</h3>\r\n              <p>{summary}</p>\r\n            </div>\r\n          )}\r\n\r\n          {/* ✅ 식당 리스트 */}\r\n          {recommendedStore.length > 0 && (\r\n            <>\r\n              <KakaoMap stores={recommendedStore} />   {/* ✅ 지도 삽입 */}\r\n              <div className=\"result-section\">\r\n                <h3 className=\"result-title\">🔖 추천 식당 목록</h3>\r\n                {recommendedStore.map((store, index) => (\r\n                  <div key={index} className=\"result-item\">\r\n                    <label>식당명</label>\r\n                    <input type=\"text\" readOnly value={store.name} />\r\n                    <label>링크</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      readOnly\r\n                      value={store.url}\r\n                      onClick={() => window.open(store.url, '_blank')}\r\n                      style={{ cursor: 'pointer' }}\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n          {!loading && recommendedStore.length === 0 && (\r\n            <p className=\"no-result\">추천된 식당이 없습니다. 주소를 입력해 주세요.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}