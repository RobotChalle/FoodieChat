{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\FoodyChat\\\\foodychat_frontend\\\\src\\\\components\\\\MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport NavBar from './NavBar';\nimport './css/main.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MainPage() {\n  _s();\n  const [userInfo, setUserInfo] = useState(null);\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUserInfo(JSON.parse(storedUser));\n    }\n  }, []);\n  useEffect(() => {\n    document.documentElement.setAttribute('data-theme', darkMode ? 'dark' : 'light');\n  }, [darkMode]);\n  useEffect(() => {\n    if (menuOpen) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = '';\n    }\n  }, [menuOpen]);\n  const handleLogout = async () => {\n    try {\n      await axios.post('http://localhost:8080/users/logout', new URLSearchParams({\n        user_id: userInfo.user_id\n      }), {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        withCredentials: true\n      });\n\n      // 로그아웃 성공 시 처리\n      localStorage.removeItem('user');\n      navigate('/login');\n    } catch (err) {\n      console.error('로그아웃 실패:', err);\n      alert('로그아웃 중 오류가 발생했습니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(MainPage, \"79Out1nSreUH54Z5B919CFmWckU=\");\n_c = MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","axios","NavBar","jsxDEV","_jsxDEV","Fragment","_Fragment","MainPage","_s","userInfo","setUserInfo","menuOpen","setMenuOpen","darkMode","setDarkMode","storedUser","localStorage","getItem","JSON","parse","document","documentElement","setAttribute","body","style","overflow","handleLogout","post","URLSearchParams","user_id","headers","withCredentials","removeItem","navigate","err","console","error","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/workspace/FoodyChat/foodychat_frontend/src/components/MainPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport NavBar from './NavBar';\r\nimport './css/main.css';\r\n\r\nexport default function MainPage() {\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n      if (storedUser) {\r\n          setUserInfo(JSON.parse(storedUser));\r\n      }\r\n    }, []);\r\n\r\n  useEffect(() => {\r\n    document.documentElement.setAttribute('data-theme', darkMode ? 'dark' : 'light');\r\n  }, [darkMode]);\r\n\r\n  useEffect(() => {\r\n    if (menuOpen) {\r\n      document.body.style.overflow = 'hidden';\r\n    } else {\r\n      document.body.style.overflow = '';\r\n    }\r\n  }, [menuOpen]);\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n        await axios.post('http://localhost:8080/users/logout', \r\n            new URLSearchParams({\r\n              user_id: userInfo.user_id,\r\n            }),\r\n            {\r\n              headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n              withCredentials: true,\r\n            }\r\n        );\r\n\r\n        // 로그아웃 성공 시 처리\r\n        localStorage.removeItem('user');\r\n        navigate('/login');\r\n    } catch (err) {\r\n        console.error('로그아웃 실패:', err);\r\n        alert('로그아웃 중 오류가 발생했습니다.');\r\n    }\r\n};\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n    </>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExB,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd,MAAMgB,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC7C,IAAIF,UAAU,EAAE;MACZL,WAAW,CAACQ,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC;IACvC;EACF,CAAC,EAAE,EAAE,CAAC;EAERhB,SAAS,CAAC,MAAM;IACdqB,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAET,QAAQ,GAAG,MAAM,GAAG,OAAO,CAAC;EAClF,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEdd,SAAS,CAAC,MAAM;IACd,IAAIY,QAAQ,EAAE;MACZS,QAAQ,CAACG,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAG,QAAQ;IACzC,CAAC,MAAM;MACLL,QAAQ,CAACG,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAG,EAAE;IACnC;EACF,CAAC,EAAE,CAACd,QAAQ,CAAC,CAAC;EAEd,MAAMe,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACA,MAAMzB,KAAK,CAAC0B,IAAI,CAAC,oCAAoC,EACjD,IAAIC,eAAe,CAAC;QAClBC,OAAO,EAAEpB,QAAQ,CAACoB;MACpB,CAAC,CAAC,EACF;QACEC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAoC,CAAC;QAChEC,eAAe,EAAE;MACnB,CACJ,CAAC;;MAED;MACAf,YAAY,CAACgB,UAAU,CAAC,MAAM,CAAC;MAC/BC,QAAQ,CAAC,QAAQ,CAAC;IACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,UAAU,EAAEF,GAAG,CAAC;MAC9BG,KAAK,CAAC,oBAAoB,CAAC;IAC/B;EACJ,CAAC;EAEC,oBACEjC,OAAA,CAAAE,SAAA;IAAAgC,QAAA,eACElC,OAAA,CAACF,MAAM;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBACV,CAAC;AAEP;AAAClC,EAAA,CAlDuBD,QAAQ;AAAAoC,EAAA,GAARpC,QAAQ;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}