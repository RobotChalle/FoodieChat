{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import{Link}from'react-router-dom';import{useNavigate}from'react-router-dom';// 👈 페이지 이동을 위해 추가\nimport{GoogleLogin}from'@react-oauth/google';import NavBar from'./NavBar';import{toast}from'react-toastify';import'./css/login.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function Login(){const[username,setUsername]=useState('');const[password,setPassword]=useState('');const[error,setError]=useState('');const navigate=useNavigate();// 👈 페이지 이동 함수\nconst BASE_URL=process.env.REACT_APP_BASE_URL;const handleGoogleSignup=async credentialResponse=>{try{const res=await axios.post(`${BASE_URL}/users/googleLogin`,{token:credentialResponse.credential},{headers:{\"Content-Type\":\"application/json\"},withCredentials:true});if(res.status===200){toast.success('로그인 성공!');console.log(res.data);// 👈 유저 정보 확인\n// 유저 정보 저장 (예: localStorage)\nlocalStorage.setItem('user',JSON.stringify(res.data));// 페이지 이동\nsetTimeout(()=>{navigate('/');},1000);}}catch(err){console.error(err);alert(\"구글 로그인 실패\");}};const handleLogin=async e=>{e.preventDefault();try{const response=await axios.post(`${BASE_URL}/users/loginUser`,new URLSearchParams({email:username,user_password:password}),{headers:{'Content-Type':'application/x-www-form-urlencoded'},withCredentials:true});if(response.status===200){toast.success('로그인 성공!');console.log(response.data);// ✅ 로그인 직후 세션이 잘 붙었는지 확인하기\nsetTimeout(()=>{axios.get(`${BASE_URL}/users/ses`,{withCredentials:true}).then(res=>{console.log('✅ 세션 유저 정보 확인:',res.data);localStorage.setItem('user',JSON.stringify(res.data));// 덮어쓰기\nnavigate('/');}).catch(()=>{console.warn('⚠️ 세션 확인 실패. 로그인이 유지되지 않을 수 있습니다.');navigate('/');});},300);// 💡 300~500ms 정도 딜레이 주면 쿠키 저장 확실\n}}catch(err){setError('로그인 실패: 아이디 또는 비밀번호를 확인하세요.');toast.error(err);console.error(err);}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-center\",children:/*#__PURE__*/_jsxs(\"h1\",{children:[\" \\uD83D\\uDC68\\u200D\\uD83C\\uDF73 Let\\u2019s discover ! \",/*#__PURE__*/_jsx(\"br\",{}),\" what\\u2019s on your plate today! \\uD83C\\uDF71\"]})}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleLogin,children:[/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",placeholder:\"\\uC774\\uBA54\\uC77C*\",value:username,onChange:e=>setUsername(e.target.value),required:true})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"form-control\",placeholder:\"\\uBE44\\uBC00\\uBC88\\uD638*\",value:password,onChange:e=>setPassword(e.target.value),required:true})}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",children:\"\\uACC4\\uC18D\"}),/*#__PURE__*/_jsx(\"div\",{className:\"find-account-links\",children:/*#__PURE__*/_jsx(Link,{to:\"/findaccount\",className:\"small\",children:\"\\uC774\\uBA54\\uC77C \\uCC3E\\uAE30 | \\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"divider\",children:\"\\uB610\\uB294\"}),/*#__PURE__*/_jsx(GoogleLogin,{onSuccess:credentialResponse=>{console.log('구글 로그인 성공',credentialResponse);handleGoogleSignup(credentialResponse);// ✅ 이 줄을 추가\n},onError:()=>{console.log('구글 로그인 실패');}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center footer-links\",children:[/*#__PURE__*/_jsx(Link,{to:\"/terms\",className:\"small\",children:\"\\uC774\\uC6A9\\uC57D\\uAD00\"}),/*#__PURE__*/_jsx(\"span\",{className:\"divider-vertical\",children:\"|\"}),/*#__PURE__*/_jsx(Link,{to:\"/privacy\",className:\"small\",children:\"\\uAC1C\\uC778\\uC815\\uBCF4 \\uBCF4\\uD638 \\uC815\\uCC45\"})]})]})]});}export default Login;","map":{"version":3,"names":["React","useState","axios","Link","useNavigate","GoogleLogin","NavBar","toast","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Login","username","setUsername","password","setPassword","error","setError","navigate","BASE_URL","process","env","REACT_APP_BASE_URL","handleGoogleSignup","credentialResponse","res","post","token","credential","headers","withCredentials","status","success","console","log","data","localStorage","setItem","JSON","stringify","setTimeout","err","alert","handleLogin","e","preventDefault","response","URLSearchParams","email","user_password","get","then","catch","warn","children","className","onSubmit","type","placeholder","value","onChange","target","required","to","onSuccess","onError"],"sources":["D:/workspace/FoodyChat/foodychat_frontend/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom'; // 👈 페이지 이동을 위해 추가\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport NavBar from './NavBar';\r\nimport { toast } from 'react-toastify';\r\nimport './css/login.css';\r\n\r\nfunction Login() {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate(); // 👈 페이지 이동 함수\r\n  const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\n  const handleGoogleSignup = async (credentialResponse) => {\r\n    try {\r\n        const res = await axios.post(`${BASE_URL}/users/googleLogin`, {\r\n            token: credentialResponse.credential,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          withCredentials: true\r\n        }\r\n      );\r\n\r\n      if (res.status === 200) {\r\n        toast.success('로그인 성공!');\r\n        console.log(res.data); // 👈 유저 정보 확인\r\n\r\n        // 유저 정보 저장 (예: localStorage)\r\n        localStorage.setItem('user', JSON.stringify(res.data));\r\n\r\n        // 페이지 이동\r\n        setTimeout(() => {\r\n          navigate('/');\r\n        }, 1000);\r\n      }\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(\"구글 로그인 실패\");\r\n    }\r\n  };\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    try {\r\n      const response = await axios.post(\r\n        `${BASE_URL}/users/loginUser`, \r\n        new URLSearchParams({\r\n          email: username,\r\n          user_password: password,\r\n        }),\r\n        {\r\n          headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n          withCredentials: true,\r\n        }\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        toast.success('로그인 성공!');\r\n        console.log(response.data);\r\n      \r\n        // ✅ 로그인 직후 세션이 잘 붙었는지 확인하기\r\n        setTimeout(() => {\r\n          axios.get(`${BASE_URL}/users/ses`, { withCredentials: true })\r\n            .then((res) => {\r\n              console.log('✅ 세션 유저 정보 확인:', res.data);\r\n              localStorage.setItem('user', JSON.stringify(res.data)); // 덮어쓰기\r\n              navigate('/');\r\n            })\r\n            .catch(() => {\r\n              console.warn('⚠️ 세션 확인 실패. 로그인이 유지되지 않을 수 있습니다.');\r\n              navigate('/');\r\n            });\r\n        }, 300); // 💡 300~500ms 정도 딜레이 주면 쿠키 저장 확실\r\n      }\r\n    } catch (err) {\r\n      setError('로그인 실패: 아이디 또는 비밀번호를 확인하세요.');\r\n      toast.error(err);\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <NavBar />\r\n    <div className=\"container\">\r\n      <div className=\"text-center\">\r\n          <h1> 👨‍🍳 Let’s discover ! <br/> what’s on your plate today! 🍱</h1>\r\n      </div>\r\n      <form onSubmit={handleLogin}>\r\n          <div className=\"form-group\">\r\n              <input \r\n                  type=\"text\"\r\n                  className=\"form-control\" \r\n                  placeholder=\"이메일*\" \r\n                  value={username}\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                  required \r\n              />\r\n          </div>\r\n          <div className=\"form-group\">\r\n              <input \r\n                  type=\"password\" \r\n                  className=\"form-control\" \r\n                  placeholder=\"비밀번호*\" \r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  required \r\n              />\r\n          </div>\r\n          {error && <div className=\"error-message\">{error}</div>}\r\n          <button type=\"submit\" className=\"btn btn-primary\">계속</button>\r\n          \r\n          <div className=\"find-account-links\">\r\n              <Link to=\"/findaccount\" className=\"small\">이메일 찾기 | 비밀번호 찾기</Link>\r\n          </div>\r\n          \r\n          <div className=\"divider\">또는</div>\r\n          \r\n          <GoogleLogin\r\n            onSuccess={(credentialResponse) => {\r\n              console.log('구글 로그인 성공', credentialResponse);\r\n              handleGoogleSignup(credentialResponse); // ✅ 이 줄을 추가\r\n            }}\r\n            onError={() => {\r\n              console.log('구글 로그인 실패');\r\n            }}\r\n          />\r\n      </form>\r\n      <div className=\"text-center footer-links\">\r\n          <Link to=\"/terms\" className=\"small\">이용약관</Link>\r\n          <span className=\"divider-vertical\">|</span>\r\n          <Link to=\"/privacy\" className=\"small\">개인정보 보호 정책</Link>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}