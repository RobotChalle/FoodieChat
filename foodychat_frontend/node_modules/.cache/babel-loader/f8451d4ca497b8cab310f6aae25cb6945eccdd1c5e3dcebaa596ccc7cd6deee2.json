{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\FoodyChat\\\\foodychat_frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport loginHtml from '../../public/login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:8080/users/login', {\n        user_name: username,\n        user_password: password\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        withCredentials: true\n      });\n      if (response.status === 200) {\n        alert('로그인 성공!');\n        console.log(response.data);\n      }\n    } catch (err) {\n      setError('로그인 실패: 아이디 또는 비밀번호를 확인하세요.');\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"loginHtml\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n}\n_s(Login, \"lABZ+K3zbnEaFQvlduiFXLNOf5A=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","loginHtml","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","error","setError","handleLogin","e","preventDefault","response","post","user_name","user_password","headers","withCredentials","status","alert","console","log","data","err","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/workspace/FoodyChat/foodychat_frontend/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport loginHtml from '../../public/login'\r\n\r\nfunction Login() {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    try {\r\n      const response = await axios.post(\r\n        'http://localhost:8080/users/login',\r\n        {\r\n          user_name: username,\r\n          user_password: password\r\n        },\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          withCredentials: true\r\n        }\r\n      );\r\n  \r\n      if (response.status === 200) {\r\n        alert('로그인 성공!');\r\n        console.log(response.data);\r\n      }\r\n    } catch (err) {\r\n      setError('로그인 실패: 아이디 또는 비밀번호를 확인하세요.');\r\n      console.error(err);\r\n    }\r\n  };\r\n  return <loginHtml />;\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMa,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAC/B,mCAAmC,EACnC;QACEC,SAAS,EAAEX,QAAQ;QACnBY,aAAa,EAAEV;MACjB,CAAC,EACD;QACEW,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,eAAe,EAAE;MACnB,CACF,CAAC;MAED,IAAIL,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;QAC3BC,KAAK,CAAC,SAAS,CAAC;QAChBC,OAAO,CAACC,GAAG,CAACT,QAAQ,CAACU,IAAI,CAAC;MAC5B;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZf,QAAQ,CAAC,6BAA6B,CAAC;MACvCY,OAAO,CAACb,KAAK,CAACgB,GAAG,CAAC;IACpB;EACF,CAAC;EACD,oBAAOvB,OAAA;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAY,CAAC;AACtB;AAACzB,EAAA,CAjCQD,KAAK;AAAA2B,EAAA,GAAL3B,KAAK;AAmCd,eAAeA,KAAK;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}