{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\FoodyChat\\\\foodychat_frontend\\\\src\\\\components\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSearchParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './css/resetpassword.css'; // 스타일은 별도 정의\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResetPassword() {\n  _s();\n  const [searchParams] = useSearchParams();\n  const token = searchParams.get('token');\n  const navigate = useNavigate();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  useEffect(() => {\n    if (!token) {\n      setError('유효하지 않은 비밀번호 재설정 링크입니다.');\n    }\n  }, [token]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    if (password !== confirmPassword) {\n      setError('비밀번호가 일치하지 않습니다.');\n      return;\n    }\n    try {\n      await axios.post('http://localhost:8080/users/resetPassword', new URLSearchParams({\n        token: token,\n        newPassword: password\n      }), {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        withCredentials: true\n      });\n      setSuccess('비밀번호가 성공적으로 변경되었습니다. 로그인 화면으로 이동합니다.');\n      setTimeout(() => navigate('/login'), 3000);\n    } catch (err) {\n      setError(err, '비밀번호 재설정에 실패했습니다. 토큰이 만료되었거나 유효하지 않습니다.');\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-password-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC7AC\\uC124\\uC815\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 23\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }, this), !success && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          placeholder: \"\\uC0C8 \\uBE44\\uBC00\\uBC88\\uD638\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC7AC\\uC124\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(ResetPassword, \"GOLfyP2OYddtJFcwyIdZ/fY5WKE=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useEffect","useSearchParams","useNavigate","axios","jsxDEV","_jsxDEV","ResetPassword","_s","searchParams","token","get","navigate","password","setPassword","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","handleSubmit","e","preventDefault","post","URLSearchParams","newPassword","headers","withCredentials","setTimeout","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["D:/workspace/FoodyChat/foodychat_frontend/src/components/ResetPassword.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSearchParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './css/resetpassword.css'; // 스타일은 별도 정의\r\n\r\nexport default function ResetPassword() {\r\n    const [searchParams] = useSearchParams();\r\n    const token = searchParams.get('token');\r\n    const navigate = useNavigate();\r\n\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (!token) {\r\n            setError('유효하지 않은 비밀번호 재설정 링크입니다.');\r\n        }\r\n    }, [token]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n        setSuccess('');\r\n\r\n        if (password !== confirmPassword) {\r\n            setError('비밀번호가 일치하지 않습니다.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await axios.post('http://localhost:8080/users/resetPassword', \r\n                new URLSearchParams({\r\n                    token: token,\r\n                    newPassword: password\r\n                }),\r\n                {\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    withCredentials: true\r\n                }\r\n            );\r\n            setSuccess('비밀번호가 성공적으로 변경되었습니다. 로그인 화면으로 이동합니다.');\r\n            setTimeout(() => navigate('/login'), 3000);\r\n        } catch (err) {\r\n            setError(err,'비밀번호 재설정에 실패했습니다. 토큰이 만료되었거나 유효하지 않습니다.');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"reset-password-container\">\r\n            <h2>비밀번호 재설정</h2>\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n            {success && <div className=\"success-message\">{success}</div>}\r\n            {!success && (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"새 비밀번호\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"비밀번호 확인\"\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">비밀번호 재설정</button>\r\n                </form>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}