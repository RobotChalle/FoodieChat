{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\FoodyChat\\\\foodychat_frontend\\\\src\\\\components\\\\CafeRecommend.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport NavBar from './NavBar';\nimport { toast } from 'react-toastify';\nimport './css/meal-recommend.css';\nimport './css/main.css';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MealRecommendation() {\n  _s();\n  const {\n    foodName\n  } = useParams();\n  // const getToday = () => {\n  //     const today = new Date();\n  //     return today.toISOString().split('T')[0];\n  // };\n  const [location, setLocation] = useState();\n  // const getEndOfMonth = () => {\n  // const date = new Date();\n  // const end = new Date(date.getFullYear(), date.getMonth() + 1, 1);\n  //     return end.toISOString().split('T')[0];\n  // };\n\n  // const [startDate, setStartDate] = useState(getToday());\n  // const [endDate, setEndDate] = useState(getEndOfMonth());\n  const [recommendedStore, setRecommendedStore] = useState([]);\n  // const [loading, setLoading] = useState(false); // ✅ 로딩 상태 추가\n\n  const handleRecommend = async () => {\n    try {\n      setLoading(true); // ✅ 로딩 시작\n      // 'all'은 제거하고 넘김\n      const payload = new URLSearchParams({\n        foodName: foodName,\n        location: location\n      });\n      const response = await axios.post('http://localhost:8080/analyze/recommend', payload, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        withCredentials: true\n      });\n      if (response.status === 200) {\n        toast.success('추천 완료!');\n      }\n      setRecommendedStore(response.data.result);\n    } catch (error) {\n      console.error('추천 실패:', error);\n    } finally {\n      setLoading(false); // ✅ 로딩 종료\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recommend-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recommend-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"title\",\n          children: [\"\\uD83D\\uDCC5 \", foodName, \" \\uB9DE\\uCDA4 \\uC2DD\\uB2F9 \\uCD94\\uCC9C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRecommend,\n          className: \"btn btn-primary\",\n          disabled: loading,\n          children: [loading ? '🍽 추천중...' : '🍱 추천 받기', \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: '10px',\n          fontWeight: '500',\n          color: '#555'\n        },\n        children: \"\\uCD94\\uCC9C \\uACB0\\uACFC\\uB97C \\uC0DD\\uC131 \\uC911\\uC785\\uB2C8\\uB2E4. \\uC7A0\\uC2DC\\uB9CC \\uAE30\\uB2E4\\uB824\\uC8FC\\uC138\\uC694...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), \"recommendedStore\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(MealRecommendation, \"0g33Rn0qcFYmDZiXNkm3x9PyrFA=\", false, function () {\n  return [useParams];\n});\n_c = MealRecommendation;\nvar _c;\n$RefreshReg$(_c, \"MealRecommendation\");","map":{"version":3,"names":["React","useState","axios","NavBar","toast","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","MealRecommendation","_s","foodName","location","setLocation","recommendedStore","setRecommendedStore","handleRecommend","setLoading","payload","URLSearchParams","response","post","headers","withCredentials","status","success","data","result","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","disabled","loading","style","marginTop","fontWeight","color","_c","$RefreshReg$"],"sources":["D:/workspace/FoodyChat/foodychat_frontend/src/components/CafeRecommend.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport NavBar from './NavBar';\r\nimport { toast } from 'react-toastify';\r\nimport './css/meal-recommend.css';\r\nimport './css/main.css';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nexport default function MealRecommendation() {\r\n    const { foodName } = useParams();\r\n    // const getToday = () => {\r\n    //     const today = new Date();\r\n    //     return today.toISOString().split('T')[0];\r\n    // };\r\n    const [location, setLocation] = useState();\r\n    // const getEndOfMonth = () => {\r\n    // const date = new Date();\r\n    // const end = new Date(date.getFullYear(), date.getMonth() + 1, 1);\r\n    //     return end.toISOString().split('T')[0];\r\n    // };\r\n\r\n    // const [startDate, setStartDate] = useState(getToday());\r\n    // const [endDate, setEndDate] = useState(getEndOfMonth());\r\n    const [recommendedStore, setRecommendedStore] = useState([]);\r\n    // const [loading, setLoading] = useState(false); // ✅ 로딩 상태 추가\r\n\r\n    const handleRecommend = async () => {\r\n        try {\r\n          setLoading(true); // ✅ 로딩 시작\r\n            // 'all'은 제거하고 넘김\r\n            const payload = new URLSearchParams({\r\n                foodName: foodName,\r\n                location: location,\r\n            });\r\n\r\n            const response = await axios.post('http://localhost:8080/analyze/recommend', payload, {\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                withCredentials: true\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                toast.success('추천 완료!');\r\n            }\r\n            setRecommendedStore(response.data.result);\r\n        } catch (error) {\r\n            console.error('추천 실패:', error);\r\n        } finally {\r\n          setLoading(false); // ✅ 로딩 종료\r\n      }\r\n    };\r\n\r\n\r\n  return (\r\n    <>\r\n    <NavBar />\r\n    <div className=\"recommend-wrapper\">\r\n      <div className=\"recommend-inner\">\r\n        <h2 className=\"title\">📅 {foodName} 맞춤 식당 추천</h2>\r\n        {/* <div className=\"form-row\">\r\n          <div className=\"form-group-inline meal-type-group\">\r\n            <label>식사 선택</label>\r\n            <label><input type=\"checkbox\" checked={mealTypes.includes('breakfast') && mealTypes.includes('lunch') && mealTypes.includes('dinner')} onChange={() => handleCheckboxChange('all')} /> 전체</label>\r\n            <label><input type=\"checkbox\" checked={mealTypes.includes('breakfast')} onChange={() => handleCheckboxChange('breakfast')} /> 조식</label>\r\n            <label><input type=\"checkbox\" checked={mealTypes.includes('lunch')} onChange={() => handleCheckboxChange('lunch')} /> 중식</label>\r\n            <label><input type=\"checkbox\" checked={mealTypes.includes('dinner')} onChange={() => handleCheckboxChange('dinner')} /> 석식</label>\r\n          </div> */}\r\n\r\n          <button onClick={handleRecommend} className=\"btn btn-primary\" disabled={loading}>\r\n              {loading ? '🍽 추천중...' : '🍱 추천 받기'}  {/* ✅ 텍스트 변경 */}\r\n          </button>\r\n        </div>\r\n\r\n        {loading && (\r\n            <p style={{ marginTop: '10px', fontWeight: '500', color: '#555' }}>\r\n                추천 결과를 생성 중입니다. 잠시만 기다려주세요...\r\n            </p>\r\n        )}recommendedStore\r\n\r\n        {/* <div className=\"table-scroll-container\">\r\n          <table className=\"result-table\">\r\n            <thead>\r\n              <tr>\r\n                \r\n              <th className=\"col-narrow\">상호면</th>\r\n              <th className=\"col-wide\">전화번호</th>\r\n              <th className=\"col-narrow\">주소</th>\r\n              <th className=\"col-narrow\">영업시간</th>\r\n\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {recommendedMeals.map((meal, index) => (\r\n                <tr key={index}>\r\n                  <td>{meal.date}</td>\r\n                  <td>{meal.type}</td>\r\n                  <td>{meal.menu}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div> */}\r\n      {/* </div> */}\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,0BAA0B;AACjC,OAAO,gBAAgB;AACvB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG7C,eAAe,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EACzC,MAAM;IAAEC;EAAS,CAAC,GAAGP,SAAS,CAAC,CAAC;EAChC;EACA;EACA;EACA;EACA,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,CAAC;EAC1C;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA,MAAM,CAACc,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5D;;EAEA,MAAMgB,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACFC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;MAChB;MACA,MAAMC,OAAO,GAAG,IAAIC,eAAe,CAAC;QAChCR,QAAQ,EAAEA,QAAQ;QAClBC,QAAQ,EAAEA;MACd,CAAC,CAAC;MAEF,MAAMQ,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,yCAAyC,EAAEH,OAAO,EAAE;QAClFI,OAAO,EAAE;UAAE,cAAc,EAAE;QAAoC,CAAC;QAChEC,eAAe,EAAE;MACrB,CAAC,CAAC;MAEF,IAAIH,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;QACzBrB,KAAK,CAACsB,OAAO,CAAC,QAAQ,CAAC;MAC3B;MACAV,mBAAmB,CAACK,QAAQ,CAACM,IAAI,CAACC,MAAM,CAAC;IAC7C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAClC,CAAC,SAAS;MACRX,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB;EACF,CAAC;EAGH,oBACEX,OAAA,CAAAE,SAAA;IAAAsB,QAAA,gBACAxB,OAAA,CAACJ,MAAM;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV5B,OAAA;MAAK6B,SAAS,EAAC,mBAAmB;MAAAL,QAAA,gBAChCxB,OAAA;QAAK6B,SAAS,EAAC,iBAAiB;QAAAL,QAAA,gBAC9BxB,OAAA;UAAI6B,SAAS,EAAC,OAAO;UAAAL,QAAA,GAAC,eAAG,EAACnB,QAAQ,EAAC,yCAAS;QAAA;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAU/C5B,OAAA;UAAQ8B,OAAO,EAAEpB,eAAgB;UAACmB,SAAS,EAAC,iBAAiB;UAACE,QAAQ,EAAEC,OAAQ;UAAAR,QAAA,GAC3EQ,OAAO,GAAG,WAAW,GAAG,UAAU,EAAC,IAAE;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAELI,OAAO,iBACJhC,OAAA;QAAGiC,KAAK,EAAE;UAAEC,SAAS,EAAE,MAAM;UAAEC,UAAU,EAAE,KAAK;UAAEC,KAAK,EAAE;QAAO,CAAE;QAAAZ,QAAA,EAAC;MAEnE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACN,EAAC,kBAEF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAwBC,CAAC;EAAA,eACJ,CAAC;AAEP;AAACxB,EAAA,CAjGuBD,kBAAkB;EAAA,QACjBL,SAAS;AAAA;AAAAuC,EAAA,GADVlC,kBAAkB;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}