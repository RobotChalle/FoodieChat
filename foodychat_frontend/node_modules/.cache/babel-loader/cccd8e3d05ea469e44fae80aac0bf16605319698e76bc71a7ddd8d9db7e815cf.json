{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import NavBar from'./NavBar';import{toast}from'react-toastify';import'./css/meal-recommend.css';import'./css/main.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function MealRecommendation(){const getToday=()=>{const today=new Date();return today.toISOString().split('T')[0];};const getEndOfMonth=()=>{const date=new Date();const end=new Date(date.getFullYear(),date.getMonth()+1,1);return end.toISOString().split('T')[0];};const[startDate,setStartDate]=useState(getToday());const[endDate,setEndDate]=useState(getEndOfMonth());const[mealTypes,setMealTypes]=useState([]);const[recommendedMeals,setRecommendedMeals]=useState([]);const[loading,setLoading]=useState(false);// ✅ 로딩 상태 추가\nconst BASE_URL=process.env.REACT_APP_BASE_URL;const handleCheckboxChange=type=>{if(type==='all'){const isAllSelected=mealTypes.includes('breakfast')&&mealTypes.includes('lunch')&&mealTypes.includes('dinner');setMealTypes(isAllSelected?[]:['breakfast','lunch','dinner']);}else{setMealTypes(prev=>prev.includes(type)?prev.filter(t=>t!==type):[...prev,type]);}};const handleRecommend=async()=>{try{setLoading(true);// ✅ 로딩 시작\n// 'all'은 제거하고 넘김\nconst filteredTypes=mealTypes.filter(type=>type!=='all');const payload=new URLSearchParams({start:startDate,end:endDate,types:filteredTypes.join(',')});const response=await axios.post(`${BASE_URL}/analyze/recommend`,payload,{headers:{'Content-Type':'application/x-www-form-urlencoded'},withCredentials:true});if(response.status===200){toast.success('추천 완료!');}setRecommendedMeals(response.data.result);}catch(error){console.error('추천 실패:',error);}finally{setLoading(false);// ✅ 로딩 종료\n}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsx(\"div\",{className:\"recommend-wrapper\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"recommend-inner\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"title\",children:\"\\uD83D\\uDCC5 \\uB9DE\\uCDA4 \\uC2DD\\uB2E8 \\uCD94\\uCC9C\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group-inline\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\uAE30\\uAC04 \\uC120\\uD0DD\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:startDate,onChange:e=>setStartDate(e.target.value),className:\"date-input\"}),/*#__PURE__*/_jsx(\"span\",{className:\"tilde\",children:\"~\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:endDate,onChange:e=>setEndDate(e.target.value),className:\"date-input\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group-inline meal-type-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\uC2DD\\uC0AC \\uC120\\uD0DD\"}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:mealTypes.includes('breakfast')&&mealTypes.includes('lunch')&&mealTypes.includes('dinner'),onChange:()=>handleCheckboxChange('all')}),\" \\uC804\\uCCB4\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:mealTypes.includes('breakfast'),onChange:()=>handleCheckboxChange('breakfast')}),\" \\uC870\\uC2DD\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:mealTypes.includes('lunch'),onChange:()=>handleCheckboxChange('lunch')}),\" \\uC911\\uC2DD\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:mealTypes.includes('dinner'),onChange:()=>handleCheckboxChange('dinner')}),\" \\uC11D\\uC2DD\"]})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:handleRecommend,className:\"btn btn-primary\",disabled:loading,children:[loading?'🍽 추천중...':'🍱 추천 받기',\" \"]})]}),loading&&/*#__PURE__*/_jsx(\"p\",{style:{marginTop:'10px',fontWeight:'500',color:'#555'},children:\"\\uCD94\\uCC9C \\uACB0\\uACFC\\uB97C \\uC0DD\\uC131 \\uC911\\uC785\\uB2C8\\uB2E4. \\uC7A0\\uC2DC\\uB9CC \\uAE30\\uB2E4\\uB824\\uC8FC\\uC138\\uC694...\"}),/*#__PURE__*/_jsx(\"div\",{className:\"table-scroll-container\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"result-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"col-narrow\",children:\"\\uB0A0\\uC9DC\"}),/*#__PURE__*/_jsx(\"th\",{className:\"col-narrow\",children:\"\\uC2DD\\uC0AC\\uAD6C\\uBD84\"}),/*#__PURE__*/_jsx(\"th\",{className:\"col-wide\",children:\"\\uCD94\\uCC9C\\uBA54\\uB274\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:recommendedMeals.map((meal,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:meal.date}),/*#__PURE__*/_jsx(\"td\",{children:meal.type}),/*#__PURE__*/_jsx(\"td\",{children:meal.menu})]},index))})]})})]})})]});}","map":{"version":3,"names":["React","useState","axios","NavBar","toast","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","MealRecommendation","getToday","today","Date","toISOString","split","getEndOfMonth","date","end","getFullYear","getMonth","startDate","setStartDate","endDate","setEndDate","mealTypes","setMealTypes","recommendedMeals","setRecommendedMeals","loading","setLoading","BASE_URL","process","env","REACT_APP_BASE_URL","handleCheckboxChange","type","isAllSelected","includes","prev","filter","t","handleRecommend","filteredTypes","payload","URLSearchParams","start","types","join","response","post","headers","withCredentials","status","success","data","result","error","console","children","className","value","onChange","e","target","checked","onClick","disabled","style","marginTop","fontWeight","color","map","meal","index","menu"],"sources":["D:/workspace/FoodyChat/foodychat_frontend/src/components/MealRecommend.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport NavBar from './NavBar';\r\nimport { toast } from 'react-toastify';\r\nimport './css/meal-recommend.css';\r\nimport './css/main.css';\r\n\r\nexport default function MealRecommendation() {\r\n    const getToday = () => {\r\n        const today = new Date();\r\n        return today.toISOString().split('T')[0];\r\n    };\r\n\r\n    const getEndOfMonth = () => {\r\n    const date = new Date();\r\n    const end = new Date(date.getFullYear(), date.getMonth() + 1, 1);\r\n        return end.toISOString().split('T')[0];\r\n    };\r\n\r\n    const [startDate, setStartDate] = useState(getToday());\r\n    const [endDate, setEndDate] = useState(getEndOfMonth());\r\n    const [mealTypes, setMealTypes] = useState([]);\r\n    const [recommendedMeals, setRecommendedMeals] = useState([]);\r\n    const [loading, setLoading] = useState(false); // ✅ 로딩 상태 추가\r\n    const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\n    const handleCheckboxChange = (type) => {\r\n        if (type === 'all') {\r\n            const isAllSelected = mealTypes.includes('breakfast') && mealTypes.includes('lunch') && mealTypes.includes('dinner');\r\n            setMealTypes(isAllSelected ? [] : ['breakfast', 'lunch', 'dinner']);\r\n        } else {\r\n            setMealTypes((prev) =>\r\n                prev.includes(type) ? prev.filter((t) => t !== type) : [...prev, type]\r\n            );\r\n        }\r\n    };\r\n\r\n    const handleRecommend = async () => {\r\n        try {\r\n          setLoading(true); // ✅ 로딩 시작\r\n            // 'all'은 제거하고 넘김\r\n            const filteredTypes = mealTypes.filter((type) => type !== 'all');\r\n            const payload = new URLSearchParams({\r\n                start: startDate,\r\n                end: endDate,\r\n                types: filteredTypes.join(',')\r\n            });\r\n\r\n            const response = await axios.post(`${BASE_URL}/analyze/recommend`, payload, {\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                withCredentials: true\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                toast.success('추천 완료!');\r\n            }\r\n            setRecommendedMeals(response.data.result);\r\n        } catch (error) {\r\n            console.error('추천 실패:', error);\r\n        } finally {\r\n          setLoading(false); // ✅ 로딩 종료\r\n      }\r\n    };\r\n\r\n\r\n  return (\r\n    <>\r\n    <NavBar />\r\n    <div className=\"recommend-wrapper\">\r\n      <div className=\"recommend-inner\">\r\n        <h2 className=\"title\">📅 맞춤 식단 추천</h2>\r\n\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group-inline\">\r\n            <label>기간 선택</label>\r\n            <input type=\"date\" value={startDate} onChange={(e) => setStartDate(e.target.value)} className=\"date-input\" />\r\n            <span className=\"tilde\">~</span>\r\n            <input type=\"date\" value={endDate} onChange={(e) => setEndDate(e.target.value)} className=\"date-input\" />\r\n          </div>\r\n\r\n          <div className=\"form-group-inline meal-type-group\">\r\n            <label>식사 선택</label>\r\n            <label><input type=\"checkbox\" checked={mealTypes.includes('breakfast') && mealTypes.includes('lunch') && mealTypes.includes('dinner')} onChange={() => handleCheckboxChange('all')} /> 전체</label>\r\n            <label><input type=\"checkbox\" checked={mealTypes.includes('breakfast')} onChange={() => handleCheckboxChange('breakfast')} /> 조식</label>\r\n            <label><input type=\"checkbox\" checked={mealTypes.includes('lunch')} onChange={() => handleCheckboxChange('lunch')} /> 중식</label>\r\n            <label><input type=\"checkbox\" checked={mealTypes.includes('dinner')} onChange={() => handleCheckboxChange('dinner')} /> 석식</label>\r\n          </div>\r\n\r\n          <button onClick={handleRecommend} className=\"btn btn-primary\" disabled={loading}>\r\n              {loading ? '🍽 추천중...' : '🍱 추천 받기'} {/* ✅ 텍스트 변경 */}\r\n          </button>\r\n        </div>\r\n\r\n        {loading && (\r\n            <p style={{ marginTop: '10px', fontWeight: '500', color: '#555' }}>\r\n                추천 결과를 생성 중입니다. 잠시만 기다려주세요...\r\n            </p>\r\n        )}\r\n\r\n        <div className=\"table-scroll-container\">\r\n          <table className=\"result-table\">\r\n            <thead>\r\n              <tr>\r\n                <th className=\"col-narrow\">날짜</th>\r\n                <th className=\"col-narrow\">식사구분</th>\r\n                <th className=\"col-wide\">추천메뉴</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {recommendedMeals.map((meal, index) => (\r\n                <tr key={index}>\r\n                  <td>{meal.date}</td>\r\n                  <td>{meal.type}</td>\r\n                  <td>{meal.menu}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}