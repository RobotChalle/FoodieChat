{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import NavBar from'./NavBar';import CalendarView from'./CalendarView';import TableView from'./TableView';import'./css/usermealsearch.css';import'./css/main.css';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";export default function UserMealSearch(){const[query,setQuery]=useState('');const[meals,setMeals]=useState([]);const[responseType,setResponseType]=useState('table');const[filteredMeals,setFilteredMeals]=useState([]);const[loading,setLoading]=useState(false);const[chatHistory,setChatHistory]=useState([]);const BASE_URL=process.env.REACT_APP_BASE_URL;const FAST_API_URL=process.env.REACT_APP_FAST_API_URL;console.log(\"👉 BASE_URL:\",process.env.REACT_APP_BASE_URL);console.log(\"👉 FAST_API_URL:\",process.env.REACT_APP_FAST_API_URL);useEffect(()=>{axios.get(`${BASE_URL}/users/meals`,{withCredentials:true}).then(res=>setMeals(res.data)).catch(err=>console.error('식단 조회 실패:',err));},[]);const handleSubmit=async()=>{if(!query.trim())return;const userMessage={role:'user',content:query};setChatHistory(prev=>[...prev,userMessage]);setLoading(true);try{console.log('📤 쿼리 전송:',query);console.log('📤 meals 전송:',meals);const res=await axios.post(`${FAST_API_URL}/query`,{query,meals},{headers:{'Content-Type':'application/json'},withCredentials:true});const result=res.data;console.log('📥 응답 결과:',result);setResponseType(result.type);setFilteredMeals(result.filteredMeals);const aiMessage={role:'ai',content:result.type==='table'?'📋 식단을 테이블 형식으로 보여드릴게요.':'📅 식단을 달력 형식으로 보여드릴게요.'};setChatHistory(prev=>[...prev,aiMessage]);}catch(error){var _error$response;const errorMessage={role:'ai',content:'❌ 오류가 발생했습니다. 다시 시도해주세요.'};setChatHistory(prev=>[...prev,errorMessage]);console.error('LLM 쿼리 실패:',error);if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===429){alert(\"OpenAI 사용량이 초과되었습니다. 잠시 후 다시 시도해 주세요.\");}else{alert(\"요청 중 오류가 발생했습니다.\");}}finally{setQuery('');setLoading(false);}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsx(\"div\",{className:\"usermealsearch-wrapper\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"usermealsearch-inner\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-feature-panel\",children:/*#__PURE__*/_jsx(\"div\",{className:\"visualizer\",children:loading?/*#__PURE__*/_jsx(\"div\",{className:\"loading-message\",children:\"\\u23F3 \\uBD84\\uC11D \\uC911\\uC785\\uB2C8\\uB2E4...\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[responseType==='table'&&/*#__PURE__*/_jsx(TableView,{meals:filteredMeals}),responseType==='calendar'&&/*#__PURE__*/_jsx(CalendarView,{meals:filteredMeals})]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-panel\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-title-bar\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"chat-icon\",children:\"\\uD83D\\uDCAC\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"chat-title\",children:\"\\uCC57\\uBD07\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-history\",children:chatHistory.map((msg,idx)=>/*#__PURE__*/_jsx(\"div\",{className:`chat-message ${msg.role}`,children:/*#__PURE__*/_jsx(\"div\",{className:\"chat-bubble\",children:msg.content})},idx))}),/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-input-area\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:query,onChange:e=>setQuery(e.target.value),placeholder:\"\\uC608: 3\\uC6D4 \\uC2DD\\uB2E8\\uC744 \\uB2EC\\uB825\\uC73C\\uB85C \\uBCF4\\uC5EC\\uC918\",onKeyDown:e=>e.key==='Enter'&&handleSubmit()}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,disabled:loading,children:loading?'전송 중...':'전송'})]})]})]})})]});}","map":{"version":3,"names":["React","useState","useEffect","axios","NavBar","CalendarView","TableView","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","UserMealSearch","query","setQuery","meals","setMeals","responseType","setResponseType","filteredMeals","setFilteredMeals","loading","setLoading","chatHistory","setChatHistory","BASE_URL","process","env","REACT_APP_BASE_URL","FAST_API_URL","REACT_APP_FAST_API_URL","console","log","get","withCredentials","then","res","data","catch","err","error","handleSubmit","trim","userMessage","role","content","prev","post","headers","result","type","aiMessage","_error$response","errorMessage","response","status","alert","children","className","map","msg","idx","value","onChange","e","target","placeholder","onKeyDown","key","onClick","disabled"],"sources":["D:/workspace/FoodyChat/foodychat_frontend/src/components/UserMealSearch.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport NavBar from './NavBar';\r\nimport CalendarView from './CalendarView';\r\nimport TableView from './TableView';\r\nimport './css/usermealsearch.css';\r\nimport './css/main.css';\r\n\r\nexport default function UserMealSearch() {\r\n  const [query, setQuery] = useState('');\r\n  const [meals, setMeals] = useState([]);\r\n  const [responseType, setResponseType] = useState('table');\r\n  const [filteredMeals, setFilteredMeals] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n  const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n  const FAST_API_URL = process.env.REACT_APP_FAST_API_URL;\r\n\r\n  console.log(\"👉 BASE_URL:\", process.env.REACT_APP_BASE_URL);\r\n  console.log(\"👉 FAST_API_URL:\", process.env.REACT_APP_FAST_API_URL);\r\n  useEffect(() => {\r\n    axios.get(`${BASE_URL}/users/meals`, { withCredentials: true })\r\n      .then(res => setMeals(res.data))\r\n      .catch(err => console.error('식단 조회 실패:', err));\r\n  }, []);\r\n\r\n  const handleSubmit = async () => {\r\n    if (!query.trim()) return;\r\n\r\n    const userMessage = { role: 'user', content: query };\r\n    setChatHistory(prev => [...prev, userMessage]);\r\n\r\n    setLoading(true);\r\n    try {\r\n      console.log('📤 쿼리 전송:', query);\r\n      console.log('📤 meals 전송:', meals);\r\n      const res = await axios.post(`${FAST_API_URL}/query`, {\r\n        query,\r\n        meals\r\n      }, {\r\n        headers: { 'Content-Type': 'application/json' },\r\n        withCredentials: true\r\n      });\r\n\r\n      const result = res.data;\r\n      console.log('📥 응답 결과:', result);\r\n      setResponseType(result.type);\r\n      setFilteredMeals(result.filteredMeals);\r\n\r\n      const aiMessage = {\r\n        role: 'ai',\r\n        content: result.type === 'table'\r\n          ? '📋 식단을 테이블 형식으로 보여드릴게요.'\r\n          : '📅 식단을 달력 형식으로 보여드릴게요.'\r\n      };\r\n      setChatHistory(prev => [...prev, aiMessage]);\r\n    } catch (error) {\r\n      const errorMessage = {\r\n        role: 'ai',\r\n        content: '❌ 오류가 발생했습니다. 다시 시도해주세요.'\r\n      };\r\n      setChatHistory(prev => [...prev, errorMessage]);\r\n      console.error('LLM 쿼리 실패:', error);\r\n\r\n      if (error.response?.status === 429) {\r\n        alert(\"OpenAI 사용량이 초과되었습니다. 잠시 후 다시 시도해 주세요.\");\r\n      } else {\r\n        alert(\"요청 중 오류가 발생했습니다.\");\r\n      }\r\n    } finally {\r\n      setQuery('');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <div className=\"usermealsearch-wrapper\">\r\n        <div className=\"usermealsearch-inner\">\r\n          <div className=\"chat-feature-panel\">\r\n            <div className=\"visualizer\">\r\n              {loading ? (\r\n                <div className=\"loading-message\">⏳ 분석 중입니다...</div>\r\n              ) : (\r\n                <>\r\n                  {responseType === 'table' && <TableView meals={filteredMeals} />}\r\n                  {responseType === 'calendar' && <CalendarView meals={filteredMeals} />}\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"chatbot-panel\">\r\n            <div className=\"chat-title-bar\">\r\n              <span className=\"chat-icon\">💬</span>\r\n              <h3 className=\"chat-title\">챗봇</h3>\r\n            </div>\r\n\r\n            <div className=\"chat-history\">\r\n              {chatHistory.map((msg, idx) => (\r\n                <div key={idx} className={`chat-message ${msg.role}`}>\r\n                  <div className=\"chat-bubble\">\r\n                    {msg.content}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"chatbot-input-area\">\r\n              <input\r\n                type=\"text\"\r\n                value={query}\r\n                onChange={e => setQuery(e.target.value)}\r\n                placeholder=\"예: 3월 식단을 달력으로 보여줘\"\r\n                onKeyDown={(e) => e.key === 'Enter' && handleSubmit()}\r\n              />\r\n              <button onClick={handleSubmit} disabled={loading}>\r\n                {loading ? '전송 중...' : '전송'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}